{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`api-url-editor`\nAn AMF powered url editor for the HTTP request editor.\n\nThe element is regular input element that is adjusted to work with URL\ndata.\nIt supports validation for URL values that may contain variables.",
      "summary": "",
      "path": "api-url-editor.html",
      "properties": [
        {
          "name": "focused",
          "type": "boolean",
          "description": "If true, the element currently has focus.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 68,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_oldTabIndex",
          "type": "(?string | undefined)",
          "description": "Value of the `tabindex` attribute before `disabled` was activated.\n`null` means the attribute was not present.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_boundFocusBlurHandler",
          "type": "Function",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "__handleEventRetargeting",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "keyEventTarget",
          "type": "?EventTarget",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 303,
              "column": 8
            },
            "end": {
              "line": 308,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "!Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 382,
              "column": 4
            },
            "end": {
              "line": 384,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "label",
          "type": "string",
          "description": "The label for this input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"Request URL\""
        },
        {
          "name": "value",
          "type": "string",
          "description": "A value generated by this editor - the URL.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onValueChanged\""
            }
          }
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "True if the last call to `validate` is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_invalidChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "allowedPattern",
          "type": "string",
          "description": "Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "type",
          "type": "string",
          "description": "The type of the input. The supported types are the\n[native input's types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_<input>_types).\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the (Polymer 1) `<input is=\"iron-input\">`'s or (Polymer 2)\n`<iron-input>`'s `type` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "list",
          "type": "string",
          "description": "The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "pattern",
          "type": "string",
          "description": "A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "Set to true to mark the input as required. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `required` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "An error message to display",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 8
            },
            "end": {
              "line": 156,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"Fill the URI parameters before making a request\""
        },
        {
          "name": "charCounter",
          "type": "boolean",
          "description": "Set to true to show a character counter.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autoValidate",
          "type": "boolean",
          "description": "Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "validator",
          "type": "string",
          "description": "Name of the validator to use.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "autocomplete",
          "type": "string",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"off\"",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autofocusChanged\""
            }
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "inputmode",
          "type": "string",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 218,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 225,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "maxlength",
          "type": "number",
          "description": "The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 245,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 255,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "step",
          "type": "string",
          "description": "Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "name",
          "type": "string",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `name` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 270,
              "column": 6
            },
            "end": {
              "line": 272,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 277,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 287,
              "column": 6
            },
            "end": {
              "line": 290,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "size",
          "type": "number",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 296,
              "column": 6
            },
            "end": {
              "line": 298,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autocapitalize",
          "type": "string",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 309,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"none\"",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autocorrect",
          "type": "string",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 318,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"off\"",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autosave",
          "type": "string",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "results",
          "type": "number",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "accept",
          "type": "string",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "multiple",
          "type": "boolean",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_ariaDescribedBy",
          "type": "string",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 357,
              "column": 6
            },
            "end": {
              "line": 360,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_ariaLabelledBy",
          "type": "string",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 366,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_inputId",
          "type": "string",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 369,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "hostAttributes",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 389,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "eventsTarget",
          "type": "Object",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\""
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "documentation",
          "type": "string",
          "description": "A documentation to show.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "skipDocs",
          "type": "boolean",
          "description": "If true it will not display documentation for the variable (if available).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 8
            },
            "end": {
              "line": 160,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "baseUri",
          "type": "string",
          "description": "Value or RAML's base URI property.\n\nNote, the element doesn't check if `baseUri` is relative or not.\nHosting application have to take care of that.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 8
            },
            "end": {
              "line": 167,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "endpointPath",
          "type": "string",
          "description": "Currently selected endpoint relative URI.\nIt is available in RAML definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 8
            },
            "end": {
              "line": 172,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_fullUri",
          "type": "?",
          "description": "Computed value, sum of `baseUri` and `endpointPath`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 8
            },
            "end": {
              "line": 176,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "queryModel",
          "type": "Array",
          "description": "Computed query properties model.\nUse `api-url-data-model` to compute model for the view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 181,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "pathModel",
          "type": "Array",
          "description": "Computed URI properties model.\nUse `api-url-data-model` to compute model for the view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "urlParams",
          "type": "Array",
          "description": "Computed, ordered list of URL variables in the URI string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "urlSearchRegexp",
          "type": "RegExp",
          "description": "Computed regexp for the current `_fullUri` value to search for the\nURI parameters.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 203,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 4
            },
            "end": {
              "line": 225,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_focusBlurHandler",
          "description": "Forward focus to inputElement. Overriden from IronControlState.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 468,
              "column": 4
            },
            "end": {
              "line": 475,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_disabledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_changedControlState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 424,
              "column": 4
            },
            "end": {
              "line": 434,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 375,
              "column": 6
            },
            "end": {
              "line": 385,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 410,
              "column": 6
            },
            "end": {
              "line": 420,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 461,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 484,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "inputElement",
          "description": "Returns a reference to the input element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!HTMLElement"
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_focusableElement",
          "description": "Returns a reference to the focusable element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!HTMLElement"
          },
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 417,
              "column": 4
            },
            "end": {
              "line": 422,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_appendStringWithSpace",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            },
            {
              "name": "more"
            }
          ],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_onAddonAttached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "validate",
          "description": "Returns true if the `value` is valid, and updates `invalid`. If you want\nyour element to have custom validation logic, do not override this method;\noverride `_getValidity(value)` instead.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "Deprecated: The value to be validated. By default,\nit is passed to the validator's `validate()` function, if a validator is set.\nIf this argument is not specified, then the element's `value` property\nis used, if it exists."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if `value` is valid."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_onShiftTabDown",
          "description": "Handler that is called when a shift+tab keypress is detected by the menu.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 482,
              "column": 4
            },
            "end": {
              "line": 490,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "CustomEvent",
              "description": "A key combination event."
            }
          ],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_handleAutoValidate",
          "description": "If `autoValidate` is true, then validates the element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 495,
              "column": 4
            },
            "end": {
              "line": 498,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "updateValueAndPreserveCaret",
          "description": "Restores the cursor to its original position after updating the value.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 504,
              "column": 4
            },
            "end": {
              "line": 520,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "string",
              "description": "The value that should be saved."
            }
          ],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_computeAlwaysFloatLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 522,
              "column": 4
            },
            "end": {
              "line": 524,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alwaysFloatLabel"
            },
            {
              "name": "placeholder"
            }
          ],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_updateAriaLabelledBy",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 526,
              "column": 4
            },
            "end": {
              "line": 540,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_generateInputId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 542,
              "column": 4
            },
            "end": {
              "line": 546,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_onChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 548,
              "column": 4
            },
            "end": {
              "line": 559,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_autofocusChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 561,
              "column": 4
            },
            "end": {
              "line": 586,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "_invalidChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_validator",
          "description": "Recompute this every time it's needed, because we don't know if the\nunderlying IronValidatableBehaviorMeta has changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "hasValidator",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "True if the validator `validator` exists."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_getValidity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 590,
              "column": 4
            },
            "end": {
              "line": 611,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 4
            },
            "end": {
              "line": 229,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_computeFullUrl",
          "description": "Computes endpoint's full URI with (possibly) variables in it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "API base URI"
            },
            {
              "name": "endpointPath",
              "type": "String",
              "description": "Endpoint relative URI to `baseUri`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "A full URI for the endpoint."
          }
        },
        {
          "name": "_computeValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_fullUri"
            },
            {
              "name": "queryRecord"
            },
            {
              "name": "uriRecord"
            }
          ]
        },
        {
          "name": "_computeValue",
          "description": "Computes url value from current `baseUri` and query/uri models.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 279,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "queryModel",
              "type": "Array",
              "description": "Query parameters model"
            },
            {
              "name": "pathModel",
              "type": "Array",
              "description": "Uri parameters model."
            },
            {
              "name": "uri",
              "type": "String",
              "description": "Current endpoint uri."
            }
          ]
        },
        {
          "name": "_formValuesFromModel",
          "description": "Creates a map of serialized values from a model.\nIt is a replacemenet for `iron-form` serialize function which\ncan't be used here because this function is called before local DOM\nis ready and therefore form is not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Model to compute."
            }
          ],
          "return": {
            "type": "Map",
            "desc": "Map of serialized values."
          }
        },
        {
          "name": "_valueFormModelItem",
          "description": "Extracts value from the model item.\nIf the item is required it is alwats returned (even  if it is empty string).\nIf value is not required and not present then it returns `undefined`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Model item"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Model value"
          }
        },
        {
          "name": "_applyUriParams",
          "description": "Applies URI parameters to the URL.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "An URL to apply the params to"
            },
            {
              "name": "model",
              "type": "Array",
              "description": "Uri parameters model."
            }
          ],
          "return": {
            "type": "String",
            "desc": "The URL."
          }
        },
        {
          "name": "_applyQueryParams",
          "description": "Applies query parameters to the URL.\nQuery parameters that are not required by the API spec and don't have value\nare removed from the URL. Parameters that are required and don't have\nvalue are set to the URL but with empty value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 4
            },
            "end": {
              "line": 375,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "An URL to apply the params to"
            },
            {
              "name": "model",
              "type": "Array",
              "description": "Query parameters model."
            }
          ],
          "return": {
            "type": "String",
            "desc": "The URL."
          }
        },
        {
          "name": "_computeQueryItems",
          "description": "Computes query parameters list of items containing `name` and `value`\nproperties to use to build query string.\n\nThis function may change the `params` map.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Object",
              "description": "Map of query model properties."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of query parameters."
          }
        },
        {
          "name": "_wwwFormUrlEncode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 431,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "object",
              "type": "Array",
              "description": "The list of objects to encode as\nx-www-form-urlencoded string. Each entry should have `name` and `value`\nproperties."
            }
          ],
          "return": {
            "type": "string",
            "desc": "."
          }
        },
        {
          "name": "_wwwFormUrlEncodePiece",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 445,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "*",
              "description": "A key or value to encode as x-www-form-urlencoded."
            }
          ],
          "return": {
            "type": "string",
            "desc": "."
          }
        },
        {
          "name": "__userInputHandler",
          "description": "Updates URI / query parameters model from user input.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 4
            },
            "end": {
              "line": 470,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Input event"
            }
          ]
        },
        {
          "name": "_applyQueryParamToObject",
          "description": "Applies query parameter values to an object.\nRepeated parameters will have array value intead of string value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 478,
              "column": 4
            },
            "end": {
              "line": 492,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "param",
              "type": "String",
              "description": "Query parameter value as string. Eg `name=value`"
            },
            {
              "name": "obj",
              "type": "Object",
              "description": "Target for values"
            }
          ]
        },
        {
          "name": "_applyUriValues",
          "description": "Applies values from the `values` array to the uri parametes which names are in the `names`\narray.\nBoth lists are ordered list of paramerters.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 501,
              "column": 4
            },
            "end": {
              "line": 511,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values",
              "type": "Array.<String>",
              "description": "Values for the parameters"
            },
            {
              "name": "names",
              "type": "Array.<String>",
              "description": "List of variables names (uri parameters)."
            }
          ]
        },
        {
          "name": "_applyQueryParamsValues",
          "description": "Applies query parameters values to the render list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 518,
              "column": 4
            },
            "end": {
              "line": 527,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "map",
              "type": "Object",
              "description": "A map where keys are names of the parameters in the\n`queryModel` list"
            }
          ]
        },
        {
          "name": "_findModelIndex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 4
            },
            "end": {
              "line": 535,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_onValueChanged",
          "description": "A handler that is called on input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 539,
              "column": 4
            },
            "end": {
              "line": 547,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_displayVariableDoc",
          "description": "Displays the doc for the variable.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 549,
              "column": 4
            },
            "end": {
              "line": 570,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "_onElementBlur",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 572,
              "column": 4
            },
            "end": {
              "line": 575,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_extValueChangedHandler",
          "description": "A handler for the `url-value-changed` event.\nIf this element is not the source of the event then it will update the `value` property.\nIt's to be used besides the Polymer's data binding system.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 581,
              "column": 4
            },
            "end": {
              "line": 588,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_inputTap",
          "description": "Handler for input click / tap.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 613,
              "column": 4
            },
            "end": {
              "line": 619,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getSelectedVariable",
          "description": "Returns variable name for current caret position.\nThis can be used for mouse on keyboard events to determine\nif current action involve a variable.\nIt takes a selection start as a orientation point to find a variable.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 4
            },
            "end": {
              "line": 633,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(String | undefined)",
            "desc": "Variable name or undefined if at current\nposition there's no variable."
          }
        },
        {
          "name": "_computeVariableFromPosition",
          "description": "Computes variable from current caret position.\nIt looks for brackets to the left and right from the selection and\neverything between is a variable name.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 643,
              "column": 4
            },
            "end": {
              "line": 680,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "start",
              "type": "Number",
              "description": "Caret position in thex field."
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Variable name or undefined if at current\nposition there's no variable."
          }
        },
        {
          "name": "_computeUrlRegexp",
          "description": "Creates a regular expression from the `_fullUri` to match the\nparameters in the `value` url.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 688,
              "column": 4
            },
            "end": {
              "line": 695,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "Enpoint's absolute URL with (possibly) parameters."
            }
          ],
          "return": {
            "type": "String",
            "desc": "A RegExp that can be used to search for parameters values."
          }
        },
        {
          "name": "_computeUrlParams",
          "description": "Computes ordered list of parameters applied to the `_fullUri`.\nFor example the URL: `http://{environment}.domain.com/{apiVersion}/`\n\nwill be mapped to\n```\n[\n  \"environment\",\n  \"apiVersion\"\n]\n```",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 711,
              "column": 4
            },
            "end": {
              "line": 720,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "The URL to test for the parameters."
            }
          ],
          "return": {
            "type": "(Array | null)",
            "desc": "An ordered list of parameters or null if none found."
          }
        },
        {
          "name": "fire",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 722,
              "column": 4
            },
            "end": {
              "line": 737,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "detail"
            },
            {
              "name": "options"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 135,
          "column": 2
        },
        "end": {
          "line": 738,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "_base",
      "name": "ApiUrlEditor",
      "attributes": [
        {
          "name": "focused",
          "description": "If true, the element currently has focus.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "description": "Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 68,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "key-event-target",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?EventTarget",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "label",
          "description": "The label for this input.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "A value generated by this editor - the URL.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "True if the last call to `validate` is invalid.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "allowed-pattern",
          "description": "Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "type",
          "description": "The type of the input. The supported types are the\n[native input's types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_<input>_types).\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the (Polymer 1) `<input is=\"iron-input\">`'s or (Polymer 2)\n`<iron-input>`'s `type` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "list",
          "description": "The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "pattern",
          "description": "A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "required",
          "description": "Set to true to mark the input as required. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `required` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "error-message",
          "description": "An error message to display",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 8
            },
            "end": {
              "line": 156,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "char-counter",
          "description": "Set to true to show a character counter.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "auto-validate",
          "description": "Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "validator",
          "description": "Name of the validator to use.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "autocomplete",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autofocus",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "inputmode",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 218,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "minlength",
          "description": "The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 225,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "maxlength",
          "description": "The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "min",
          "description": "The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 245,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "max",
          "description": "The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 255,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "step",
          "description": "Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "name",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `name` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 270,
              "column": 6
            },
            "end": {
              "line": 272,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "placeholder",
          "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 277,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "readonly",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 287,
              "column": 6
            },
            "end": {
              "line": 290,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "size",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 296,
              "column": 6
            },
            "end": {
              "line": 298,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autocapitalize",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 309,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autocorrect",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 315,
              "column": 6
            },
            "end": {
              "line": 318,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "autosave",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "results",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "accept",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "multiple",
          "description": "If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.",
          "sourceRange": {
            "file": "bower_components/paper-input/paper-input-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "documentation",
          "description": "A documentation to show.",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 8
            },
            "end": {
              "line": 158,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "skip-docs",
          "description": "If true it will not display documentation for the variable (if available).",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 8
            },
            "end": {
              "line": 160,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "base-uri",
          "description": "Value or RAML's base URI property.\n\nNote, the element doesn't check if `baseUri` is relative or not.\nHosting application have to take care of that.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 8
            },
            "end": {
              "line": 167,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "endpoint-path",
          "description": "Currently selected endpoint relative URI.\nIt is available in RAML definition.",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 8
            },
            "end": {
              "line": 172,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "query-model",
          "description": "Computed query properties model.\nUse `api-url-data-model` to compute model for the view.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 181,
              "column": 25
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "path-model",
          "description": "Computed URI properties model.\nUse `api-url-data-model` to compute model for the view.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "url-params",
          "description": "Computed, ordered list of URL variables in the URI string.",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "url-search-regexp",
          "description": "Computed regexp for the current `_fullUri` value to search for the\nURI parameters.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 203,
              "column": 9
            }
          },
          "metadata": {},
          "type": "RegExp"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "focused-changed",
          "description": "Fired when the `focused` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "change",
          "description": "change",
          "metadata": {},
          "inheritedFrom": "Polymer.PaperInputBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-url-editor",
      "mixins": [
        "Polymer.PaperInputBehavior",
        "Polymer.IronValidatableBehavior",
        "ArcBehaviors.EventsTargetBehavior"
      ]
    }
  ]
}
