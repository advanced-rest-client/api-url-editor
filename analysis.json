{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`api-url-editor`\nAn AMF powered url editor for the HTTP request editor.\n\nThe element is regular input element that is adjusted to work with URL\ndata.\nIt supports validation for URL values that may contain variables.",
      "summary": "",
      "path": "api-url-editor.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label for this input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 124,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Request URL\""
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "A value generated by this editor - the URL.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 8
            },
            "end": {
              "line": 130,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onValueChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "errorMessage",
          "type": "string | null | undefined",
          "description": "An error message to display",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 135,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Fill the URI parameters before making a request\""
        },
        {
          "name": "baseUri",
          "type": "string | null | undefined",
          "description": "Value or RAML's base URI property.\n\nNote, the element doesn't check if `baseUri` is relative or not.\nHosting application have to take care of that.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "endpointPath",
          "type": "string | null | undefined",
          "description": "Currently selected endpoint relative URI.\nIt is available in RAML definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 147,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_fullUri",
          "type": "?",
          "description": "Computed value, sum of `baseUri` and `endpointPath`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "queryModel",
          "type": "Array | null | undefined",
          "description": "Computed query properties model.\nUse `api-url-data-model` to compute model for the view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "pathModel",
          "type": "Array | null | undefined",
          "description": "Computed URI properties model.\nUse `api-url-data-model` to compute model for the view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 8
            },
            "end": {
              "line": 167,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "urlParams",
          "type": "Array | null | undefined",
          "description": "Computed, ordered list of URL variables in the URI string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 174,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "urlSearchRegexp",
          "type": "RegExp | null | undefined",
          "description": "Computed regexp for the current `_fullUri` value to search for the\nURI parameters.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 8
            },
            "end": {
              "line": 182,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "RegExp"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 208,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 4
            },
            "end": {
              "line": 204,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeFullUrl",
          "description": "Computes endpoint's full URI with (possibly) variables in it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "API base URI"
            },
            {
              "name": "endpointPath",
              "type": "String",
              "description": "Endpoint relative URI to `baseUri`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "A full URI for the endpoint."
          }
        },
        {
          "name": "_computeValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_fullUri"
            },
            {
              "name": "queryRecord"
            },
            {
              "name": "uriRecord"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeValue",
          "description": "Computes url value from current `baseUri` and query/uri models.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "queryModel",
              "type": "Array",
              "description": "Query parameters model"
            },
            {
              "name": "pathModel",
              "type": "Array",
              "description": "Uri parameters model."
            },
            {
              "name": "uri",
              "type": "String",
              "description": "Current endpoint uri."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formValuesFromModel",
          "description": "Creates a map of serialized values from a model.\nIt is a replacemenet for `iron-form` serialize function which\ncan't be used here because this function is called before local DOM\nis ready and therefore form is not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Model to compute."
            }
          ],
          "return": {
            "type": "Map",
            "desc": "Map of serialized values."
          }
        },
        {
          "name": "_valueFormModelItem",
          "description": "Extracts value from the model item.\nIf the item is required it is alwats returned (even  if it is empty string).\nIf value is not required and not present then it returns `undefined`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 304,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Model item"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Model value"
          }
        },
        {
          "name": "_applyUriParams",
          "description": "Applies URI parameters to the URL.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "An URL to apply the params to"
            },
            {
              "name": "model",
              "type": "Array",
              "description": "Uri parameters model."
            }
          ],
          "return": {
            "type": "String",
            "desc": "The URL."
          }
        },
        {
          "name": "_createUrlReplaceRegex",
          "description": "Creates a RegExp object to replace template variable from the base string",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 345,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "String",
              "description": "Name of the parameter to be replaced"
            }
          ],
          "return": {
            "type": "RegExp"
          }
        },
        {
          "name": "_applyQueryParams",
          "description": "Applies query parameters to the URL.\nQuery parameters that are not required by the API spec and don't have value\nare removed from the URL. Parameters that are required and don't have\nvalue are set to the URL but with empty value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "An URL to apply the params to"
            },
            {
              "name": "model",
              "type": "Array",
              "description": "Query parameters model."
            }
          ],
          "return": {
            "type": "String",
            "desc": "The URL."
          }
        },
        {
          "name": "_computeQueryItems",
          "description": "Computes query parameters list of items containing `name` and `value`\nproperties to use to build query string.\n\nThis function may change the `params` map.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 409,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Object",
              "description": "Map of query model properties."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of query parameters."
          }
        },
        {
          "name": "_wwwFormUrlEncode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "object",
              "type": "Array",
              "description": "The list of objects to encode as\nx-www-form-urlencoded string. Each entry should have `name` and `value`\nproperties."
            }
          ],
          "return": {
            "type": "string",
            "desc": "."
          }
        },
        {
          "name": "_wwwFormUrlEncodePiece",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 439,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "*",
              "description": "A key or value to encode as x-www-form-urlencoded."
            }
          ],
          "return": {
            "type": "string",
            "desc": "."
          }
        },
        {
          "name": "__userInputHandler",
          "description": "Updates URI / query parameters model from user input.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 464,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Input event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyQueryParamToObject",
          "description": "Applies query parameter values to an object.\nRepeated parameters will have array value intead of string value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 472,
              "column": 4
            },
            "end": {
              "line": 486,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "param",
              "type": "String",
              "description": "Query parameter value as string. Eg `name=value`"
            },
            {
              "name": "obj",
              "type": "Object",
              "description": "Target for values"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyUriValues",
          "description": "Applies values from the `values` array to the uri parametes which names are in the `names`\narray.\nBoth lists are ordered list of paramerters.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 495,
              "column": 4
            },
            "end": {
              "line": 505,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values",
              "type": "Array.<String>",
              "description": "Values for the parameters"
            },
            {
              "name": "names",
              "type": "Array.<String>",
              "description": "List of variables names (uri parameters)."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyQueryParamsValues",
          "description": "Applies query parameters values to the render list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 4
            },
            "end": {
              "line": 525,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "map",
              "type": "Object",
              "description": "A map where keys are names of the parameters in the\n`queryModel` list"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_findModelIndex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 533,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_onValueChanged",
          "description": "A handler that is called on input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 537,
              "column": 4
            },
            "end": {
              "line": 545,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onElementBlur",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 4
            },
            "end": {
              "line": 549,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_extValueChangedHandler",
          "description": "A handler for the `url-value-changed` event.\nIf this element is not the source of the event then it will update the `value` property.\nIt's to be used besides the Polymer's data binding system.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 564,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getValidity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 587,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeUrlRegexp",
          "description": "Creates a regular expression from the `_fullUri` to match the\nparameters in the `value` url.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 595,
              "column": 4
            },
            "end": {
              "line": 602,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "Enpoint's absolute URL with (possibly) parameters."
            }
          ],
          "return": {
            "type": "String",
            "desc": "A RegExp that can be used to search for parameters values."
          }
        },
        {
          "name": "_computeUrlParams",
          "description": "Computes ordered list of parameters applied to the `_fullUri`.\nFor example the URL: `http://{environment}.domain.com/{apiVersion}/`\n\nwill be mapped to\n```\n[\n  \"environment\",\n  \"apiVersion\"\n]\n```",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 618,
              "column": 4
            },
            "end": {
              "line": 627,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "The URL to test for the parameters."
            }
          ],
          "return": {
            "type": "(Array | null)",
            "desc": "An ordered list of parameters or null if none found."
          }
        },
        {
          "name": "fire",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 4
            },
            "end": {
              "line": 644,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "detail"
            },
            {
              "name": "options"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 112,
          "column": 2
        },
        "end": {
          "line": 645,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "_base",
      "name": "ApiElements.ApiUrlEditor",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "label",
          "description": "The label for this input.",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 124,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "A value generated by this editor - the URL.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 8
            },
            "end": {
              "line": 130,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error-message",
          "description": "An error message to display",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 135,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "base-uri",
          "description": "Value or RAML's base URI property.\n\nNote, the element doesn't check if `baseUri` is relative or not.\nHosting application have to take care of that.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "endpoint-path",
          "description": "Currently selected endpoint relative URI.\nIt is available in RAML definition.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 147,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "query-model",
          "description": "Computed query properties model.\nUse `api-url-data-model` to compute model for the view.",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 159,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "path-model",
          "description": "Computed URI properties model.\nUse `api-url-data-model` to compute model for the view.",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 8
            },
            "end": {
              "line": 167,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "url-params",
          "description": "Computed, ordered list of URL variables in the URI string.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 174,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "url-search-regexp",
          "description": "Computed regexp for the current `_fullUri` value to search for the\nURI parameters.",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 8
            },
            "end": {
              "line": 182,
              "column": 9
            }
          },
          "metadata": {},
          "type": "RegExp | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "query-model-changed",
          "description": "Fired when the `queryModel` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "path-model-changed",
          "description": "Fired when the `pathModel` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-url-editor",
      "mixins": [
        "Polymer.PaperInputBehavior",
        "Polymer.IronValidatableBehavior",
        "ArcBehaviors.EventsTargetBehavior"
      ]
    }
  ]
}
